define(["underscore","backbone","models/youtube_user_playlist_item","models/youtube/YoutubePlaylistItemsService","models/youtube/PlaylistsService","models/gapi"],function(t,e,i,s,n,r){{var a=e.Collection.extend({model:s,url:function(){return"http://gdata.youtube.com/feeds/api/users/"+this.username+"/playlists?v=2&alt=jsonc&max-results=50&start-index="+this.index},initialize:function(){this.tempItems=[]},insert:function(t,e){var i=this.get(t);return i&&i.insert(e),i},list:function(t){var e=new n;e.methods.list.id=t,e.on("sync",function(e){var i=e.get("result").items[0].contentDetails.itemCount;this.get(t).set("size",i)},this),e.fetch()},createPlaylist:function(t,e){var i=new n;return i.on("sync",function(t){this.trigger("created",t.attributes),i.off()},this),i.insert(t,e)},removePlaylist:function(t){var e=new n;return e.on("sync",function(){this.trigger("removed",t),e.off()},this),e.remove(t)},resetParams:function(){this.index=1,this.tempItems.length=0},getInfo:function(){this.hasChanged("id")&&this.set({startIndex:1},{silent:!0}),this.fetch()},index:1,fetchNext:function(t){var e=50,i=this.index,s=t.data.totalItems,n=e+i,r=s-n>=0;return r&&(this.index=n),r},parse:function(t){return t.data.items=this.tempItems.concat(t.data.items),this.tempItems=t.data.items,this.fetchNext(t)&&this.fetch({reset:!0}),t.data.items},comparator:function(t){return t.get("title")}});r.extend({})}return a});